apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: busybox-ds
spec:
  selector:
    matchLabels:
      app: busybox
  template:
    metadata:
      labels:
        app: busybox
    spec:
      containers:
      - name: david
        image: gcr.io/google-containers/busybox:1.27
        command:
        - sleep
        - "36000"
        imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: Service
metadata:
  name: kube-vip-example-tkg
spec:
  selector:
    app: example
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: headless-svc
spec:
  clusterIP: None 
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  # Change this to *true* if you NEVER want an NXDOMAIN response !
  publishNotReadyAddresses: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
#        readinessProbe:
#          httpGet:
#            path: /index.html
#           port: 80
#            scheme: HTTP
#          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
# for smoke testing... an ubuntu curl / wget image
apiVersion: v1
kind: Pod
metadata:
  name: busybox
  namespace: default
  labels:
    app: antrea
spec:
  containers:
  - image: gcr.io/google-containers/busybox:1.27
    command:
    - sleep
    - "3600"
    imagePullPolicy: IfNotPresent
    name: busybox
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/os
            operator: In
            values:
            - linux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-tester
spec:
  #### Modify this to your desired scale factor
  replicas: 1
  selector:
    matchLabels:
      app: service-tester
  template:
    metadata:
      labels:
        app: service-tester
    spec:
      containers:
      - name: service-tester
        # Modify this to point to your internal registry...
        image: nicolaka/netshoot:latest
        command: ["/bin/sh"]
        args:
        - "-c"
        - |
          while true; do
            echo "Testing kube-vip-example-tkg"
            curl kube-vip-example-tkg.default.svc.cluster.local:80
            echo "Testing headless-svc"
            curl headless-svc.default.svc.cluster.local:80
            echo "Testing nginx"
            curl nginx.default.svc.cluster.local:80
            sleep 5
          done